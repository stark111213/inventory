generator client {
  provider = "prisma-client"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               String     @id @default(uuid())
  is_authenticated Boolean
  name             String
  email            String     @unique
  role             Role       @default(USER)
  //
  inventory        Inventory? @relation(fields: [inventory_id], references: [id])
  inventory_id     String?
  // 
  posts            Post[]
  liked_items      Item[]
}

model Inventory {
  id              String         @id @default(uuid())
  custom_id       String?        @unique
  creator_id      String
  created_at      DateTime
  // 
  items           Item[]
  allowed_editors User[]
  // 
  title           String
  description     String
  category        Category
  image_url       String?
  tags            String[]
  is_public       Boolean
  // 
  string_field    StringField[]
  numeric_field   NumericField[]
  boolean_field   BooleanField[]
  // 
  version         Int
}

model StringField {
  id            String          @id @default(uuid())
  content       String
  type          StringFieldType
  // 
  meta_data     FieldMeta       @relation(fields: [field_meta_id], references: [id])
  field_meta_id String          @unique
  inventory     Inventory?      @relation(fields: [inventory_id], references: [id])
  inventory_id  String?
}

enum StringFieldType {
  SINGLE_LINE
  MULTI_LINE
  LINK
}

model NumericField {
  id            String     @id @default(uuid())
  content       Float
  // 
  meta_data     FieldMeta  @relation(fields: [field_meta_id], references: [id])
  field_meta_id String     @unique
  inventory     Inventory? @relation(fields: [inventory_id], references: [id])
  inventory_id  String?
}

model BooleanField {
  id            String     @id @default(uuid())
  content       Boolean
  // 
  meta_data     FieldMeta  @relation(fields: [field_meta_id], references: [id])
  field_meta_id String     @unique
  inventory     Inventory? @relation(fields: [inventory_id], references: [id])
  inventory_id  String?
}

model FieldMeta {
  id           String        @id @default(uuid())
  title        String
  description  String
  state        Boolean
  // 
  StringField  StringField?
  NumericField NumericField?
  BooleanField BooleanField?
}

model Item {
  id           String     @id @default(uuid())
  custom_id    String?
  created_at   DateTime
  name         String
  likes        Int
  // 
  inventory    Inventory? @relation(fields: [inventory_id], references: [id])
  inventory_id String?
  // 
  user         User?      @relation(fields: [userId], references: [id])
  userId       String?
  // 
  version      Int

  @@unique([inventory_id, custom_id])
}

model Post {
  id         String   @id @default(uuid())
  created_at DateTime
  content    String
  // 
  creator    User?    @relation(fields: [creator_id], references: [id])
  creator_id String?
}

enum Role {
  USER
  ADMIN
}

enum Category {
  Equipment
  Books
  Other
}
